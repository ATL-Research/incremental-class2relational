/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package JClass2RelationalIncremental;

import java.util.LinkedList;
import java.util.stream.Collectors;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.impl.AdapterImpl;
import org.eclipse.emf.common.notify.impl.NotifyingListImpl;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.util.EContentAdapter;

import atl.research.AbstractDriver;
import transformations.batch.Class2Relational;
import transformations.incremental.Class2RelationalIncremental;
import util.CONSTANTS;
import util.IO;
import metamodels.ClassDiagram.ClassDiagramPackage;
import metamodels.ClassDiagram.Class;

public class App extends AbstractDriver {
	
	private static void registerPackages() {
		ClassDiagramPackage.eINSTANCE.eClass();
	}
	
	public App() {
		registerPackages();
	}
	
	// static run
	public static void main(String[] args) {
		App solution = new App();
		
		try {
			solution.init();
			
			if (solution.isBatchMode()) {
				solution.applyChange();
				solution.applyTransformation();
			}
			else {
				solution.applyTransformation();
				solution.applyChange();
			}
			solution.saveTarget();
		} catch (Exception e) {
			e.printStackTrace();
		}
		
	}

	// run via AbstractDriver
	@Override
	protected void applyTransformation() {
		// register packages if this has not already happened
		registerPackages();
		
		Class2RelationalIncremental.start(this.getSource(), this.getTarget());
	}

}
