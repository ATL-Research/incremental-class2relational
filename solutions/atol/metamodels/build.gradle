/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.5.1/userguide/building_java_projects.html
 */

plugins {
    id 'java-library'
    id 'org.xtext.builder' version "3.0.2"
    id 'io.github.ATL-Research.ecore2xcore' version '1.0'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    maven {
        url "https://repo1.maven.org/maven2/"
    }
}

dependencies {
    implementation "org.eclipse.xtext:org.eclipse.xtext:2.25.0"
    implementation 'org.eclipse.emf:org.eclipse.emf.ecore.xcore.lib:+'

    xtextLanguages('org.eclipse.emf:org.eclipse.emf.ecore.xcore:+') {
        exclude group: 'org.antlr', module: 'antlr-runtime'
    }
}

sourceSets {
    main {
        java.srcDirs += "${project.buildDir}/src-gen"
    }
}

xtext {
    version = "2.25.0"
    languages {
        xcore {
            setup = 'org.eclipse.emf.ecore.xcore.XcoreStandaloneSetup'
            generator.outlet.producesJava = true
            generator.outlet.cleanAutomatically = true
        }
    }
    sourceSets {
        main {
            srcDir "${project.buildDir}/xcore-gen"
            // Move the generated Xcore output to the src-gen directory
            // Also need to be set in the xcore file in the @GenModel annotation !
            output {
                dir(xtext.languages.xcore.generator.outlet, "${project.buildDir}/src-gen")
            }
        }
    }
}

generateXtext.dependsOn(generateXcore)

