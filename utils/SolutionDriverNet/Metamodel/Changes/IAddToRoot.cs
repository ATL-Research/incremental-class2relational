//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:6.0.16
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Changes;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;

namespace HSRM.TTC2023.ClassToRelational.Changes
{
    
    
    /// <summary>
    /// The public interface for AddToRoot
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(AddToRoot))]
    [XmlDefaultImplementationTypeAttribute(typeof(AddToRoot))]
    [ModelRepresentationClassAttribute("https://github.com/ATL-Research/incremental-class2relational/Changes.nmeta#//AddToRoot")]
    public interface IAddToRoot : NMF.Models.IModelElement, NMF.Models.Changes.IElementaryChange
    {
        
        /// <summary>
        /// The newObject property
        /// </summary>
        [BrowsableAttribute(false)]
        [XmlElementNameAttribute("newObject")]
        [XmlAttributeAttribute(false)]
        [ContainmentAttribute()]
        NMF.Models.IModelElement NewObject
        {
            get;
            set;
        }
        
        /// <summary>
        /// Gets fired before the NewObject property changes its value
        /// </summary>
        event System.EventHandler <ValueChangedEventArgs> NewObjectChanging;
        
        /// <summary>
        /// Gets fired when the NewObject property changed its value
        /// </summary>
        event System.EventHandler <ValueChangedEventArgs> NewObjectChanged;
    }
}

